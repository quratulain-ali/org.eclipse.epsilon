model Core driver EMF {nsuri = "org.amma.dsl.jdt.core",
optimise = "true"
};
model DOM driver EMF {nsuri = "org.amma.dsl.jdt.dom",
optimise = "true"
};
model PrimitiveTypes driver EMF {nsuri = "org.amma.dsl.jdt.primitiveTypes",
optimise = "true"
};
	/*
	 * grabats query! Tests the Grabats query.
	 * 
	 * The query finds all classes (TypeDeclaration) that declare static
	 * public methods (MethodDeclaration) whose return type is the same
	 * class
	 */
var matches:Set;

"".println();


var types = DOM!MethodDeclaration.all.select(md|
	md.modifiers.exists(mod|mod.public==true)
	and 
	md.modifiers.exists(mod|mod.static==true)
	and
	md.returnType.isTypeOf(DOM!SimpleType)
	and 
	md.returnType.name.fullyQualifiedName == td.name.fullyQualifiedName
	);
/*
var a = DOM!Modifier.all;
var a_prime = a.select(md|md.public = true);

var b = DOM!Modifier.all.select(md|md.static = true);

var c = DOM!Modifier.all.select(md|md.public = true);
*/
var a;
var b;
for(i in Sequence{1..10})
{
a = DOM!Modifier.all.select(md|md.static = true);

b = DOM!Modifier.all.select(md|md.static = false);
}
/*
for(i in Sequence{1..10})
{
matches.addAll(DOM!TypeDeclaration.all.collect(td:DOM!TypeDeclaration|td.bodyDeclarations.select(
	md:DOM!MethodDeclaration|md.modifiers.exists(mod:DOM!Modifier|mod.public==true)
	and 
	md.modifiers.exists(mod:DOM!Modifier|mod.static==true)
	and
	md.returnType.isTypeOf(DOM!SimpleType)
	and 
	md.returnType.name.fullyQualifiedName == td.name.fullyQualifiedName
	))
.flatten()
.collect(names:DOM!MethodDeclaration|names.returnType.name.fullyQualifiedName)
);

}
*/

a.println();
a.size().println();