strict digraph G {
  main;
  first;
  add;
  getDiagramClass;
  getNodes;
  createCreationTool;
  createFigureDescriptor;
  createFigure;
  createLabel;
  getLabelName;
  getCompartmentReferences;
  isEmpty;
  getNodeSize;
  isDefined;
  getLabelPlacement;
  labelHasIcon;
  getLabelEditPattern;
  getLabelViewPattern;
  getLabelAttributes;
  addAll;
  getLabelReadOnly;
  getLabelledAttributesFor;
  getAnnotationValue;
  getReadOnly;
  getContainmentReferences;
  getConcreteSubtypes;
  isNode;
  isUndefined;
  getPhantomNodes;
  getAffixedReferences;
  includes;
  firstToUpperCase;
  isCollapsible;
  clone;
  isPhantom;
  getLinks;
  getAllSuitableContainmentReferences;
  size;
  formatConnection;
  getLinkSourceFeature;
  getLinkTargetFeature;
  getSourceConstraint;
  getTargetConstraint;
  getReferenceLinks;
  getLongName;
  getLinkLabel;
  asSequence;
  getDomainMetaElement;
  getLabelClass;
  getLabelText;
  getFormatOption;
  createColor;
  isKindOf;
  createToolImage;
  main -> first [ label="" ];
  main -> add [ label="loop" ];
  main -> getDiagramClass [ label="" ];
  main -> getNodes [ label="loop" ];
  main -> createCreationTool [ label="loop" ];
  main -> createFigureDescriptor [ label="loop" ];
  main -> createFigure [ label="loop" ];
  main -> createLabel [ label="loop" ];
  main -> getLabelName [ label="loop" ];
  main -> getCompartmentReferences [ label="loop" ];
  main -> isEmpty [ label="loop" ];
  main -> getNodeSize [ label="loop" ];
  main -> isDefined [ label="loop" ];
  main -> getLabelPlacement [ label="loop" ];
  main -> labelHasIcon [ label="loop" ];
  main -> getLabelEditPattern [ label="loop" ];
  main -> getLabelViewPattern [ label="loop" ];
  main -> getLabelAttributes [ label="loop" ];
  main -> addAll [ label="loop" ];
  main -> getLabelReadOnly [ label="loop" ];
  main -> getLabelledAttributesFor [ label="loop" ];
  main -> getAnnotationValue [ label="loop" ];
  main -> getReadOnly [ label="loop" ];
  main -> getContainmentReferences [ label="" ];
  main -> getConcreteSubtypes [ label="loop" ];
  main -> isNode [ label="loop" ];
  main -> isUndefined [ label="loop" ];
  main -> getPhantomNodes [ label="" ];
  main -> getAffixedReferences [ label="loop" ];
  main -> includes [ label="loop" ];
  main -> firstToUpperCase [ label="loop" ];
  main -> isCollapsible [ label="loop" ];
  main -> clone [ label="" ];
  main -> isPhantom [ label="loop" ];
  main -> getLinks [ label="" ];
  main -> getAllSuitableContainmentReferences [ label="loop" ];
  main -> size [ label="loop" ];
  main -> formatConnection [ label="loop" ];
  main -> getLinkSourceFeature [ label="loop" ];
  main -> getLinkTargetFeature [ label="loop" ];
  main -> getSourceConstraint [ label="loop" ];
  main -> getTargetConstraint [ label="loop" ];
  main -> getReferenceLinks [ label="" ];
  main -> getLongName [ label="loop" ];
  main -> getLinkLabel [ label="loop" ];
  main -> asSequence [ label="loop" ];
  main -> getDomainMetaElement [ label="loop" ];
  createLabel -> getLabelClass [ label="" ];
  createLabel -> isDefined [ label="" ];
  createLabel -> getLabelText [ label="" ];
  createLabel -> getFormatOption [ label="" ];
  createLabel -> createColor [ label="" ];
  getDomainMetaElement -> isDefined [ label="" ];
  createFigureDescriptor -> add [ label="" ];
  createCreationTool -> isKindOf [ label="" ];
  createCreationTool -> isNode [ label="" ];
  createCreationTool -> getAnnotationValue [ label="" ];
  createCreationTool -> isUndefined [ label="" ];
  createCreationTool -> firstToUpperCase [ label="" ];
  createCreationTool -> createToolImage [ label="" ];
  createToolImage -> isUndefined [ label="" ];
}
